name: Generate RSS Feeds

on:
  schedule:
    - cron: '5 7 * * *'  # Runs once a day
  workflow_dispatch:  # Allows manual triggering

jobs:
  generate-feeds:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.PAT }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install beautifulsoup4 feedgenerator requests sendgrid

    - name: Ensure directories exist
      run: |
        mkdir -p data feeds docs

    - name: Generate feeds  
      run: |
        python src/app.py https://bigsister.live/blog
        python src/app.py https://ollama.com/blog

    - name: Commit and push RSS feed to GitHub Pages
      run: |
        # Copy generated RSS files to docs folder
        cp feeds/*xml docs/
        
        # Set up feed headers
        echo "/*xml" > docs/_headers
        echo "  Content-Type: application/rss+xml; charset=utf-8" >> docs/_headers
        
    - name: Check for changes
      id: check_changes
      run: |
        git diff --exit-code || echo "Changes detected"
        if [[ $? -eq 0 ]]; then
          echo "has_changes=false" >> $GITHUB_ENV
        else
          echo "has_changes=true" >> $GITHUB_ENV
        fi

    - name: Commit and push changes if there are any
      env:
        PAT: ${{ secrets.PAT }}
      if: ${{ env.has_changes == 'true' }}
      run: |
        # Commit the changes
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add data/* feeds/* docs/*xml docs/_headers
        git commit -m 'Update RSS feeds'
        
        # Pull latest changes before pushing to avoid conflicts
        git pull --rebase origin main

        # Push the changes back to the repository
        git push https://${{ secrets.PAT }}@github.com/jljarvi/genrss.git main

    - name: Send email notification
      env:
        SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
        HAS_CHANGES: ${{ env.has_changes }}
      run: |
        python <<EOF
        import os
        import sendgrid
        from sendgrid.helpers.mail import Mail, Email, To, Content

        sg = sendgrid.SendGridAPIClient(api_key=os.environ.get('SENDGRID_API_KEY'))
        from_email = Email("admin@nfld.uk")
        to_email = To("jljarvi@pm.me")
        subject = "Generous (genrss) status update"

        # Conditional email content based on changes
        if os.environ.get('HAS_CHANGES') == 'true':
          content = Content("text/plain", "The RSS feeds have been successfully generated and are now live on GitHub Pages.")
        else:
          content = Content("text/plain", "The RSS feeds were checked but no new changes were made.")

        mail = Mail(from_email, to_email, subject, content)

        response = sg.client.mail.send.post(request_body=mail.get())
        print(response.status_code)
        print(response.body)
        print(response.headers)
        EOF
